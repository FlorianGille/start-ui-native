# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Load ASC API Key information to use in subsequent lanes"
  lane :load_asc_api_key do
    app_store_connect_api_key(
      key_id: "64XWW55U3Y",
      issuer_id: "b7cef4ed-41fe-4f9f-af64-bc21d065e7d4",
      key_content: "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JR1RBZ0VBTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEJIa3dkd0lCQVFRZzZWckloZDQyb1Z0OG95TzIKLzlPblVlMjNIZTQ4enJlWGhjckJBQnBMZWxTZ0NnWUlLb1pJemowREFRZWhSQU5DQUFTMFVwbE9YYUxqTlNzYQpLWkxoa2NjR2hNY2t3WVJualUxUFhmaE1mWERES1U1RlFKejFiQUxQajdYZkhpNGxFb3NwMStUMTZUMklUZitFCkJZdlhONnVJCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0=",
      is_key_content_base64: true,
      in_house: false # detecting this via ASC private key not currently supported
    )
  end

  desc "Bump build number based on most recent TestFlight build number"
  lane :fetch_and_increment_build_number do
  #fetch read your app identifier defined in your Appfile
  app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
  api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

  current_version = get_version_number(
    target: "StartUINativeApp" # replace with your main target, required if you have more than one non-test target
  )
  latest_build_number = latest_testflight_build_number(
    api_key: api_key,
    version: current_version,
    app_identifier: app_identifier
  )
  increment_build_number(
    build_number: (latest_build_number + 1),
  )
  end

  desc "Push a new release build to the App Store"
  lane :release do
    xcversion(version: "13.2.1")
    load_asc_api_key
    fetch_and_increment_build_number

    api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]
    app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)

    # cert(
    #   api_key: api_key,
    #   keychain_path: ENV["KEYCHAIN_PATH"]
    # )

    # sigh(
    #   api_key: api_key,
    #   app_identifier: app_identifier,
    #   force: true
    # )

    unlock_keychain(
      path: ENV['KEYCHAIN_PATH'],
      password: ENV['MATCH_PASSWORD'],
      set_default: true
    )

    match(
      type: "appstore",
      git_basic_authorization: ENV['ACCESS_TOKEN_GITHUB'],
      keychain_password: ENV['MATCH_PASSWORD'],
      keychain_name: "app-signing.keychain-db"
    )

    update_code_signing_settings(
      use_automatic_signing: false,
      targets: ["StartUINativeApp"],
      bundle_identifier: app_identifier,
      build_configurations: ["Release"],
      team_id: "MB3DYTWW42"
    )

    build_app(
      workspace: "StartUINativeApp.xcworkspace",
      scheme: "StartUINativeApp",
      export_method: "app-store",
      xcargs: "-allowProvisioningUpdates",
      export_options: {
        provisioningProfiles: {
          app_identifier => "match AppStore com.startuinative.app",
        }
      }
    )
  end
end
