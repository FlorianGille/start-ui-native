# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Load ASC API Key information to use in subsequent lanes"
  lane :load_asc_api_key do
    app_store_connect_api_key(
      key_id: ENV["KEY_ID"],
      issuer_id: ENV["ISSUER_ID"],
      key_content: ENV["PRIVATE_KEY"],
      is_key_content_base64: true,
      in_house: false # detecting this via ASC private key not currently supported
    )
  end

  desc "Bump build number based on most recent TestFlight build number"
  lane :fetch_and_increment_build_number do
  #fetch read your app identifier defined in your Appfile
  app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
  api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

  current_version = get_version_number(
    target: "StartUINativeApp" # replace with your main target, required if you have more than one non-test target
  )
  latest_build_number = latest_testflight_build_number(
    api_key: api_key,
    version: current_version,
    app_identifier: app_identifier
  )
  increment_build_number(
    build_number: (latest_build_number + 1),
  )
  end

  desc "Push a new release build to the App Store"
  lane :release do
    load_asc_api_key
    fetch_and_increment_build_number

    api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]
    app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)

    profile_name = "App Provisioning Profile" # the name of the profile to use for the build
    output_name = "startuinative-iOS" # specify the name of the .ipa file to generate
    export_method = "app-store" # specify the export method
    compile_bitcode = true # specify whether to enable bitcode

    cert(
      api_key: api_key,
      keychain_path: ENV["KEYCHAIN_PATH"]
    )

    sigh(
      api_key: api_key,
      app_identifier: app_identifier,
      force: true # always recreate this exact profile to ensure it's valid and not expired
    )

    # turn off automatic signing during build so correct code signing identity is guaranteed to be used
    update_code_signing_settings(
      use_automatic_signing: true,
      targets: ["StartUINativeApp"], # specify which targets to update code signing settings for
      bundle_identifier: app_identifier,
      build_configurations: ["Release"] # only toggle code signing settings for Release configurations
    )

    # update_project_provisioning(
    #   xcodeproj: "StartUINativeApp.xcodeproj",
    #   target_filter: "StartUINativeApp",
    #   build_configuration: "Release",
    # )

    build_app(
      workspace: "StartUINativeApp.xcworkspace",
      scheme: "StartUINativeApp",
    )
  end
end
